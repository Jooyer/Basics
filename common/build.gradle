apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

// 2. 上传 jitpack.io需要的配置

apply plugin: 'com.github.dcendents.android-maven' // 必加
group='com.github.Jooyer'// 比加,com.github.<用户名>,如 https://github.com/Jooyer/Beauty,则是 com.github.Jooyer

android {

    compileSdkVersion rootProject.ext.android.compileSdkVersion
    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName

        testInstrumentationRunner rootProject.ext.android.testInstrumentationRunner
        consumerProguardFiles 'consumer-rules.pro'

        // 1
//        ndk {
            //选择要添加的对应cpu类型的.so库。
//            abiFilters 'armeabi-v7a'
            // 还可以添加 'x86', 'x86_64', 'mips', 'mips64' , 'armeabi', 'arm64-v8a',
//        }
    }

    //2. 将 so 放在 jni 文件夹下时
//    sourceSets {
//        main {
//            jni.srcDirs = []
//            jniLibs.srcDirs = ['src/main/jniLibs']
//        }
//    }


    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation rootProject.ext.dependencies.fileTree
    implementation rootProject.ext.dependencies.kotlin_stdlib
    implementation rootProject.ext.dependencies.appcompat
    implementation rootProject.ext.dependencies.constraintlayout

    implementation rootProject.ext.dependencies.junit
    implementation rootProject.ext.dependencies.runner
    implementation rootProject.ext.dependencies.espresso_core
    implementation rootProject.ext.dependencies.recyclerview

}
